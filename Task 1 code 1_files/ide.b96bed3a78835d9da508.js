!function(e){function n(n){for(var i,r,l=n[0],s=n[1],c=n[2],d=0,p=[];d<l.length;d++)r=l[d],Object.prototype.hasOwnProperty.call(o,r)&&o[r]&&p.push(o[r][0]),o[r]=0;for(i in s)Object.prototype.hasOwnProperty.call(s,i)&&(e[i]=s[i]);for(u&&u(n);p.length;)p.shift()();return a.push.apply(a,c||[]),t()}function t(){for(var e,n=0;n<a.length;n++){for(var t=a[n],i=!0,l=1;l<t.length;l++){var s=t[l];0!==o[s]&&(i=!1)}i&&(a.splice(n--,1),e=r(r.s=t[0]))}return e}var i={},o={288:0},a=[];function r(n){if(i[n])return i[n].exports;var t=i[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.e=function(e){var n=[],t=o[e];if(0!==t)if(t)n.push(t[2]);else{var i=new Promise((function(n,i){t=o[e]=[n,i]}));n.push(t[2]=i);var a,l=document.createElement("script");l.charset="utf-8",l.timeout=120,r.nc&&l.setAttribute("nonce",r.nc),l.src=function(e){return r.p+"web-build/"+({}[e]||e)+".b96bed3a78835d9da508.js"}(e);var s=new Error;a=function(n){l.onerror=l.onload=null,clearTimeout(c);var t=o[e];if(0!==t){if(t){var i=n&&("load"===n.type?"missing":n.type),a=n&&n.target&&n.target.src;s.message="Loading chunk "+e+" failed.\n("+i+": "+a+")",s.name="ChunkLoadError",s.type=i,s.request=a,t[1](s)}o[e]=void 0}};var c=setTimeout((function(){a({type:"timeout",target:l})}),12e4);l.onerror=l.onload=a,document.head.appendChild(l)}return Promise.all(n)},r.m=e,r.c=i,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)r.d(t,i,function(n){return e[n]}.bind(null,i));return t},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="/",r.oe=function(e){throw console.error(e),e},r.h="b96bed3a78835d9da508",r.cn="ide";var l=window.webpackJsonp=window.webpackJsonp||[],s=l.push.bind(l);l.push=n,l=l.slice();for(var c=0;c<l.length;c++)n(l[c]);var u=s;a.push([931,0,4,14,15,317,1,2,3]),t()}({1028:function(e,n,t){"use strict";t.r(n);var i=t(27),o=t.n(i),a=t(26),r=t.n(a),l=t(13),s=t.n(l),c=(t(8),t(0)),u=t.n(c),d=(t(9),t(10),t(17),t(21),t(47),t(46)),p=t.n(d),m=(t(87),t(932),t(97)),g=t.n(m),b=t(112),h=t(98),v=t(99),f=t(68),S=t(4),I=t(1),w=t(50),O=t.p+"web-build/images/guvi-logo-full-dark-bg.281008e7b758f8578182eb0e4abb31e3.png",C=t.p+"web-build/images/guvi-logo-100w.d1e93fb0354dbab908c07cf24b11ebc0.png",A=new g.a,y=Object(b.a)({app:"guvi",plugins:[Object(h.a)({trackingId:"UA-53114947-1"})]});f.b.registerPlugin(f.a,S.a);var T,j="en",N=!0,P=o()((function e(){var n=this;r()(this,e),s()(this,"renderComplierLanguages",(function(e){try{for(var t=u()("#languageSelect"),i=["BASH","BASIC","C","CLOJURE","CRYSTAL","C++","C#","ELIXIR","ERLANG","GO","HASKELL","INSECT","JAVA","JAVA 8","JAVASCRIPT","OCAML","OCTAVE","PASCAL","PYTHON 2","PYTHON 3","RUBY","RUST","OBJECTIVE C","PHP","SCALA","NASM","CLANG C","CLANG CPP","COBOL","SBCL","D","F#","FORTRAN","GROOVY","KOTLIN","LUA","PROLOG","R","SQLITE","SWIFT","TYPESCRIPT","VBNC"],o="",a=0;a<i.length;a+=1){var r=n.getValue(i[a]);o+=e&&e===r?'<option value="'.concat(r,'" selected>').concat(i[a],"</option>"):'<option value="'.concat(r,'" >').concat(i[a],"</option>")}t.html(o)}catch(e){}})),s()(this,"getMode",(function(e){var n={bash:"sh",c:"c_cpp",clojure:"clojure",crystal:"crystal",cpp:"c_cpp",csharp:"csharp",elixir:"elixir",erlang:"erlang",go:"golang",haskell:"haskell",java:"java",java8:"java",javascript:"javascript",ocaml:"ocaml",octave:"objectivec",pascal:"pascal",python:"python",python3:"python",ruby:"ruby",rust:"rust",objectivec:"objectivec",php:"php",scala:"scala",nasm:"nasm",clangc:"c_cpp",clangcpp:"c_cpp",cobol:"cobol",sbcl:"lisp",d:"d",fsharp:"fsharp",fortran:"fortran",groovy:"groovy",kotlin:"kotlin",lua:"lua",prolog:"prolog",r:"r",sqlite:"sql",swift:"swift",typescript:"typescript",vbnc:"vbscript"};return n[e]?n[e]:"text"})),s()(this,"getCompilerId",(function(e){return{BASH:"BASH",BASIC:3,C:"C","C#":"CS","C++":"CPP14","CLANG C":75,"CLANG CPP":76,CLOJURE:18,COBOL:77,CRYSTAL:19,D:56,ELIXIR:57,ERLANG:58,EXE:44,"F#":87,FORTRAN:59,GO:"GO",GROOVY:88,HASKELL:23,INSECT:25,JAVA:"JAVA","JAVA 8":"JAVA8",JAVASCRIPT:"JAVASCRIPT",KOTLIN:78,LUA:64,NASM:45,"OBJECTIVE C":79,OCAML:31,OCTAVE:32,PASCAL:33,PERL:"PERL",PHP:68,PROLOG:69,"PYTHON 2":"PY2","PYTHON 3":71,R:80,RUBY:"RUBY",RUST:42,SBCL:55,SCALA:81,SQLITE:82,SWIFT:83,TYPESCRIPT:74,VBNC:84,c:"C",cpp:"CPP14",cs:"CS",go:"GO",java:"JAVA",java8:"JAVA8",java_en:"JAVA",java_telugu:"JAVA",javascript:"JAVASCRIPT",javascript_en:"JAVASCRIPT",js:"JAVASCRIPT",m:"OBJC",php:"PHP",pl:"PERL",py:"PY2",py3:"PY3",python:"PY3",python_ar:"PY3",python_en:"PY3",python_hi:"PY3",rb:"RUBY",scala:"SCALA",sh:"BASH"}[e]})),s()(this,"getValue",(function(e){var n={BASH:"bash",BASIC:"basic",C:"c",CLOJURE:"clojure",CRYSTAL:"crystal","C++":"cpp","C#":"csharp",ELIXIR:"elixir",ERLANG:"erlang",GO:"go",HASKELL:"haskell",INSECT:"insect",JAVA:"java","JAVA 8":"java8",JAVASCRIPT:"javascript",OCAML:"ocaml",OCTAVE:"octave",PASCAL:"pascal","PYTHON 2":"python","PYTHON 3":"python3",RUBY:"ruby",RUST:"rust","OBJECTIVE C":"objectivec",PHP:"php",SCALA:"scala",NASM:"nasm","CLANG C":"clangc","CLANG CPP":"clangcpp",COBOL:"cobol",SBCL:"sbcl",D:"d","F#":"fsharp",FORTRAN:"fortran",GROOVY:"groovy",KOTLIN:"kotlin",LUA:"lua",PROLOG:"prolog",R:"r",SQLITE:"sqlite",SWIFT:"swift",TYPESCRIPT:"typescript",VBNC:"vbnc"};return n[e]?n[e]:"UNKNOWN"})),s()(this,"updateSettings",(function(){var e=n.getMode(u()("#languageSelect").val()),t=u()("#editor-font-size").val(),i=u()("input[type=radio][name=theme]:checked").val(),o=u()("#codeWrap").is(":checked"),a=u()("#showGutter").is(":checked"),r=u()("#autoCompletion").is(":checked"),l=u()("#lineNumber").is(":checked");T.session.setMode("ace/mode/".concat(e)),T.setTheme("ace/theme/".concat(i)),T.setOptions({fontSize:Number(t),wrap:o,showGutter:a,showLineNumbers:l,showPrintMargin:!1,scrollPastEnd:!0,enableLiveAutocompletion:r}),Object(I.F)("ideLanguageSelected",u()("#languageSelect option:selected").val())})),s()(this,"codeTemplate",(function(e){var n={BASH:'#A Simple Hello World Program\necho "Hello World"\n\n#Getting input via STDIN\nread userInput\necho "Input provided is: $userInput"',C:'#include <stdio.h>\nint main(void) {\n    //A Simple Hello World\n    printf("hello, world\\n");\n    \n    //Getting input via STDIN\n    int userIntInput = 0;\n    char userStringInput[100] = "";\n    scanf("%d%s", &userIntInput, &userStringInput);\n    printf("The Integer and String Input provided is: %d, %s\\n", userIntInput, userStringInput);\n    return 0;\n}',"C++":'#include <iostream>\nusing namespace std;\nint main() {\n    //A Simple Hello World Program\n    cout << "Hello World" << endl;\n    \n    //Getting input via STDIN\n    int userIntInput = 0;\n    char userStringInput[100] = "";\n    cin >> userIntInput >> userStringInput;\n    cout << "The Integer and String Input is: " << userIntInput << ", " << userStringInput << endl;\n    return 0;\n}',"C#":'public class Hello {\n    public static void Main() {\n        //A Simple Hello World Program\n        System.Console.WriteLine("hello, world");\n        \n        //Getting input via STDIN\n        string userInput = System.Console.ReadLine();\n        System.Console.WriteLine("The Input Provided is: " + userInput);\n    }\n}',GO:'package main\n\nimport "fmt"\n\nfunc main() {\n    //A Simple Hello World Program\n    fmt.Println("hello, world")\n    \n    //Getting input via STDIN\n    var userInput string\n    fmt.Scanln(&userInput)\n    fmt.Println("The Input Provided is: " + userInput)\n}',JAVA:'import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        //A Simple Hello World\n        System.out.println("hello, world");\n        \n        //Getting input via STDIN\n        Scanner obj = new Scanner(System.in);\n        String userInput = obj.next();\n        System.out.println("The Input Provided is: " + userInput);\n    }\n}',"JAVA 8":'import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        //A Simple Hello World\n        System.out.println("hello, world");\n        \n        //Getting input via STDIN\n        Scanner obj = new Scanner(System.in);\n        String userInput = obj.next();\n        System.out.println("The Input Provided is: " + userInput);\n    }\n}',JAVASCRIPT:'// Getting input via STDIN\nconst readline = require("readline");\n\nconst inp = readline.createInterface({\n  input: process.stdin\n});\n\nconst userInput = [];\n\ninp.on("line", (data) => {\n  userInput.push(data);\n});\n\ninp.on("close", () => {\n  //start-here\n  //Your code goes here â€¦ replace the below line with your code logic \n\n  console.log(userInput);\n\n  //end-here\n});',"OBJECTIVE C":'#import <Foundation/Foundation.h>\n\nint main() {\n    @autoreleasepool {\n        //A Simple hello world\n        printf("Hello World\\n");\n\n        //Getting input via STDIN \n        char name[10];\n        scanf("%s", name);\n        NSString *message = [NSString stringWithFormat:@"%s\\n", name];\n        printf("%s", message.UTF8String);\n    }\n    return 0;\n}\n',PERL:'#!/usr/bin/perl \n\n# Modules used \nuse strict; \nuse warnings; \n\n# Print function \nprint("Hello World"); \n',PHP:'<?php\n// A Simple Hello World\necho "Hello World!\\n";\n\n//Getting input via STDIN\n$input = fopen("php://stdin", "r");\n$inputs = [];\nwhile ($line = fgets($input)) {\n  $inputs[] = $line;\n}\nfclose($input);\n\necho json_encode($inputs);\n?>',"PYTHON 2":'#A Simple Hello World\nprint "Hello World"\n\n#Getting input via STDIN\nuserInput = raw_input()\nprint "The Input Provided is: " + userInput',"PYTHON 3":'#A Simple Hello World\nprint("Hello World")\n\n#Getting input via STDIN\nuserInput = input()\nprint("The Input Provided is: " + userInput)',RUBY:'#A Simple Hello World\nputs "hello, world"\n\n#Getting input via STDIN\nuserInput = gets\nputs "The Input Provided is: " + userInput',SCALA:'object Main {\n    def main(args: Array[String]) = {\n        // A simple hello world\n        println("Hello World")\n\n        // Getting input via STDIN \n        val name = scala.io.StdIn.readLine()\n        println(name)\n    }\n}\n',BASIC:'\'A Simple Hello World Program\nPRINT "hello, world"\n\n\'Getting input via STDIN\nDim userInput As String\nINPUT userInput\nPRINT "Input Provided is "; userInput',CLOJURE:';A Simple Hello World Program\n(println "hello, world")\n\n;Getting input via STDIN\n(def userInput (read-line))\n(println "The Input Provided is: "userInput)',CRYSTAL:'#A Simple Hello World\nputs "hello, world"\n\n#Getting input via STDIN\nuserInput = gets\nputs "The Input Provided is: #{userInput}"',ELIXIR:'#A Simple Hello World\nIO.puts "hello, world"\n\n#Getting input via STDIN\nuserInput = IO.read(:stdio, :line)\nIO.puts "The Input provided is: " <> userInput\n',ERLANG:'main(_) ->\n    %% A Simple Hello World\n    io:fwrite("hello, world\\n").\n    \n    %% Getting input via STDIN. Uncomment the below code to use it.\n    %% {ok, [UserInput]} = io:fread("", "~s"),\n    %% io:fwrite("The Input Provided is: ~s", [UserInput]).',HASKELL:'main = do\n    -- A Simple Hello World\n    putStrLn "Hello World"\n    \n    -- Getting input from STDIN\n    userInput <- getLine\n    putStrLn ("The Input provided is: " ++ userInput)  ',INSECT:"2 min + 30 s",OCAML:'(* A Simple Hello World *)\nprint_endline "hello, world";\n\n(* Getting input via STDIN *)\nlet n = read_line () in\nprint_string "The Input Provided is: ";\nprint_string n;',OCTAVE:'%A Simple Hello World\nprintf("hello, world\\n");\n\n%Getting input via STDIN\nx = scanf(\'%s\', [1]);\nprintf("The Input Provided is: %s", x);',PASCAL:"program Hello;\nvar userInput: string;\nbegin\n    // A Simple Hello World\n    writeln ('hello, world');\n    \n    //Getting Input Via STDIN\n    readln(userInput);\n    writeln('The Input Provide is: ', userInput)\nend.",RUST:'fn main() {\n    //A Simple Hello World\n    println!("hello, world");\n    \n    //Getting input via STDIN\n    let mut userInput = String::new();\n    std::io::stdin().read_line(&mut userInput).unwrap();\n    println!("The Input Provided is: {}", userInput);\n}',NASM:"; A Simple Hello World\nsection  .text\n    global _start\n\n_start:\n\n    xor  eax, eax\n    lea edx, [rax+len]\n    mov al, 1\n    mov  esi, msg\n    mov edi, eax\n    syscall\n\n    xor  edi, edi\n    lea eax, [rdi+60]\n    syscall\n\nsection .rodata\n\nmsg  db 'hello, world', 0xa\nlen equ $ - msg\n\n; Getting input via STDIN - uncomment below before executing\n;    global _start\n;    section .text\n;_start:\n;print_prompt: \n;    mov rax, 1                  ; syscall write\n;    mov rdi, 1                  ; stdout\n;    mov rsi, prompt             ; prompt string\n;    mov rdx, 2                  ; 2 bytes\n;    syscall\n;    mov r8, 0                   ; length of buffer\n;    mov rsi, buffer             ; initialize buffer location\n;    mov r10, 0                  ; reset EOF flag\n;read_char:\n;    mov rax, 0                  ; syscall read\n;    mov rdi, 0                  ; stdin\n;    mov rdx, 1                  ; 1 byte\n;    syscall\n;    cmp rax, 0                  ; is EOF?\n;    jne non_eof                 ; jump to process char if not EOF (read=0)\n;    mov r10, 1                  ; flag EOF\n;    jmp print_word              ; print_word\n;non_eof:    \n;    inc r8                      ; increment buffer length\n;    inc rsi                     ; increment buffer location\n;    mov r9, 0                   ; clear r9\n;    mov r9b, byte [rsi-1]       ; move previous char into r9\n;    cmp r9, 10                  ; is it NEWLINE?\n;    je print_word               ; print the word if it is (including the NEWLINE)\n;    cmp r8, buffer_size         ; compare current length with buffer_size\n;    je print_word               ; print the word if it's equal to buffer_size\n;    jmp read_char               ; read next character\n;print_word:\n;    mov rax, 1                  ; syscall write\n;    mov rdi, 1                  ; stdout\n;    mov rsi, buffer             ; buffer\n;    mov rdx, r8                 ; length of word\n;    syscall\n;    cmp r10, 1                  ; is EOF?\n;    je exit\n;    jmp print_prompt\n;exit:   \n;    mov rax, 60                 ; system call for exit\n;    xor rdi, rdi                ; exit code 0\n;    syscall                     ; invoke operating system to exit\n;\n;    section .bss\n;buffer_size equ 64    \n;buffer:\n;    resb buffer_size            ; reserve a 64-byte buffer\n; \n;    section .data\n;prompt:\n;    dw \"> \"\n","CLANG C":'#include <stdio.h>\nint main(void) {\n    //A Simple Hello World\n    printf("hello, world\\n");\n    \n    //Getting input via STDIN\n    int userIntInput = 0;\n    char userStringInput[100] = "";\n    scanf("%d%s", &userIntInput, &userStringInput);\n    printf("The Integer and String Input provided is: %d, %s\\n", userIntInput, userStringInput);\n    return 0;\n}',"CLANG CPP":'#include <iostream>\nusing namespace std;\nint main() {\n    //A Simple Hello World Program\n    cout << "Hello World" << endl;\n    \n    //Getting input via STDIN\n    int userIntInput = 0;\n    char userStringInput[100] = "";\n    cin >> userIntInput >> userStringInput;\n    cout << "The Integer and String Input is: " << userIntInput << ", " << userStringInput << endl;\n    return 0;\n}',COBOL:'IDENTIFICATION DIVISION.\nPROGRAM-ID. MAIN.\nDATA DIVISION.\n   WORKING-STORAGE SECTION.\n   01 INPUT_STRING PIC X(15).\nPROCEDURE DIVISION.\n# A Simple Hello World\nDISPLAY "hello, world".\n# Getting input via STDIN\nACCEPT INPUT_STRING.\nDISPLAY INPUT_STRING.\nSTOP RUN.\n',SBCL:'; A Simple Hello World\n(print "Hello world!")\n\n; Getting input via STDIN\n(print (read))\n',D:'import std.stdio;\n\nvoid main()\n{\n    // A Simple Hello World\n    writeln("Hello, World!");\n    \n    // Getting input via STDIN\n    string input;\n    input = readln;\n    writeln(input);\n}',"F#":'// A Simple Hello World\nprintfn "Hello World"\n\n// Getting input via STDIN\nlet input = System.Console.ReadLine()\nprintfn "%s" input',FORTRAN:'program main\n    ! A Simple Hello World\n    character(100) :: userInput\n    \n    print *, "Hello World"\n    \n    ! Getting input via STDIN\n    read (*,*) userInput\n    write (*,*) userInput\nend',GROOVY:'// A Simple Hello World\nprintln "Hello World"\n\n// Getting input via STDIN\nfor (line in System.in.readLines()) {\n   println(line);\n}',LUA:'-- A Simple Hello World\nprint("Hello World")\n\n-- Getting input via STDIN\nlocal a = io.read()\nprint(a)',PROLOG:"% A Simple Hello World\n:- initialization(main).\nmain :- write('Hello World!').",R:"# A Simple Hello World\ncat('Hello World\\n')\n\n# Getting input via STDIN\nuserInput = readLines(file(\"stdin\"))\ncat(userInput)",SQLITE:"-- A Simple Hello World\nCREATE TABLE hello(str varchar(20));\nINSERT INTO hello VALUES('Hello world!');\nSELECT * FROM hello;",SWIFT:'// A Simple Hello World\nimport Foundation\nprint("Hello World")\n\n// Getting input via STDIN - uncomment after providing input\n// let userInput = readLine()\n// print("(userInput!)")',TYPESCRIPT:'// A Simple Hello World\nconsole.log("Hello World");',VBNC:"Public Module Program\n   Public Sub Main()\n      ' A Simple Hello World\n      Console.WriteLine(\"Hello World\")\n      \n      ' Getting input via STDIN\n      Dim userInput As String\n      userInput = Console.ReadLine()\n      Console.WriteLine(userInput)\n   End Sub\nEnd Module\n",KOTLIN:'import java.util.*\nfun main() {\n    // A Simple Hello World Program\n    println("hello, world")\n    \n    // Getting input via STDIN\n    val sc = Scanner(System.`in`)\n    val input: String = sc.next()\n    println(input);\n}\n'};return n[e]?n[e]:""})),s()(this,"renderCustomCompilation",(function(e){var n=e.compilationDetails,t="",i=n.output?n.output:"Nil",o=n.executionTime?n.executionTime:"Nil",a=n.memory?n.memory:"Nil";t+="<h5>Output: </h5>",t+="<div><pre>".concat(i,"</pre><h5>Execution Time:</h5><pre>").concat(o,"</pre><h5>Memory Used: </h5><pre>").concat(a,"</pre></div>"),u()(".outputValue").html(t),u()(".output-tab").trigger("click")})),s()(this,"insertTemplate",(function(){var e=u()("#languageSelect option:selected").text();T.setValue(n.codeTemplate(e)),Object(I.F)("ideInteracted","false"),u()("#editorSettingModal, #switchTemplatePrompt").modal("hide")}))}));function x(){return!!(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<=768)}function L(){A.isActivated()?(u()(".bi-trash-fill").css("color","#0acadf"),u()("img").css("mix-blend-mode","exclusion"),u()(".navbar-brand").css("mix-blend-mode","difference"),u()(".navbar-brand img").attr("src",O),u()(".navbar-brand img").attr("width","auto"),u()(".navbar-brand img").attr("height","34px"),u()(".navbar .btn").addClass("darkmode-ignore"),u()(".navbar .account-box-toggler").css("mix-blend-mode","exclusion"),u()(".sidebar-container .sidebar-sticky .navbar-brand").css("border-bottom","none"),u()("#lightTheme").prop("checked",!0),(new P).updateSettings()):(u()(".bi-trash-fill").css("color","#dc3545"),u()("img").css("mix-blend-mode",""),u()(".navbar-brand").css("mix-blend-mode",""),u()(".navbar .account-box-toggler").css("mix-blend-mode",""),u()(".navbar-brand img").attr("src",C),u()(".sidebar-container .sidebar-sticky .navbar-brand").css("border-bottom","1px solid #eef1f8"),u()("#darkTheme").prop("checked",!0),(new P).updateSettings())}function _(e){e?(u()("#cloud-sync").removeClass("bi-cloud-slash-fill"),u()("#cloud-sync").addClass("bi-cloudy-fill")):(u()("#cloud-sync").removeClass("bi-cloudy-fill"),u()("#cloud-sync").addClass("bi-cloud-slash-fill"))}function E(){var e=u()("#languageSelect").val();document.getElementById("runDebugger").style.visibility={python3:["web_exec_py3.py"],ruby:["web_exec_ruby.py","exec_ruby_jsonp"],javascript:["web_exec_js.py","exec_js_jsonp"]}[e]?"visible":"hidden"}function R(){var e=x()?u()("#inputGenValue-sm").val():u()("#inputGenValue").val(),n=Object(I.o)("authToken"),t=u()("#languageSelect option:selected").text();if(""===e)u()("#inputGenValue").css("border","1px solid red");else{u()("#inputGenValue").css("border","1px solid #ced4da");var i={async:!0,crossDomain:!0,url:"https://ai-api.guvi.in/getCodeIde",method:"POST",headers:{"Content-Type":"application/json"},processData:!1,data:'{\n\t"auth":"'.concat(n,'",\n\t"reqText":"').concat(btoa("".concat(e," in ").concat(t)),'"\n}')};u()(".spinner").show(),u.a.ajax(i).done((function(e){u()(".spinner").hide(),"success"===e.status?T.setValue(e.reply):u()("#aiModal").modal({show:!0,backdrop:"static"})}))}}function k(){Object(I.F)("ideLanguageSelected",u()("#languageSelect option:selected").val()),Object(I.F)("fileName",u()("#fileName").text());var e={userName:Object(I.o)("unique_url"),ideLanguageSelected:Object(I.o)("ideLanguageSelected"),ideCode:T.getValue(),fileName:Object(I.o)("fileName"),type:"saveCode"};null!=Object(I.o)("uniqueId")&&(e.type="updateAndSave",e.uniqueId=Object(I.o)("uniqueId")),Object(I.A)(e,"ideNew.php",!0,!1).then((function(n){var t=JSON.parse(n);if("success"===t.status){var i=window.location.href.split("?");"saveCode"===e.type&&Object(I.F)("uniqueId",t.uniqueId);var o="".concat(i[0],"?id=").concat(Object(I.o)("uniqueId"));window.history.pushState({path:o},"",o),_(!0);var a=window.location.href;u()("#shareLink").val(a),u()("#deleteFileName").html(Object(I.o)("fileName"))}}))}function H(){var e=new P;Object(I.h)("uniqueId");var n=window.location.href.split("?");window.history.pushState({path:n[0]},"",n[0]),Object(I.h)("ideSourceCode");var t=u()("#languageSelect option:selected").text();T.setValue(e.codeTemplate(t)),Object(I.h)("fileName"),u()("#fileName").text("Untitled"),Object(I.F)("fileName","Untitled"),u()(".outputBox").empty(),u()(".outputBox").html("<pre>Your Output will be displayed here</pre>"),u()("#inputValue-sm").val(""),u()("#inputValue").val(""),_(!1)}function G(){var e="40vh";x()&&(e="30vh"),N?(f.a.to(".ide-footer",1.2,{height:e,ease:S.a.easeOut}),u()(".tab-content").removeClass("d-none")):(f.a.to(".ide-footer",1.2,{height:"1vh",ease:S.a.easeIn}),u()(".tab-content").addClass("d-none")),N=!N}u()(document).on("input","#DarkModeToggle",(function(){A.toggle(),L()})),u()("select").on("change",(function(e){E()})),u()(document).on("click","#idePopUp",(function(){u()("#languageSelect").val("python3"),E();var e=new P;e.renderComplierLanguages("python3"),e.insertTemplate()})),u()(document).on("click","#runDebugger",(function(){Object(I.x)("IDE_Debug_clicked"),u()("#debuggerDiv").html('<div class="d-flex justify-content-center">\n<img height="300px" width="450px"  src="https://static.demilked.com/wp-content/uploads/2016/06/gif-animations-replace-loading-screen-14.gif"></div>\n<div class="progress">\n<div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>\n</div>\n<p>Loading Might take some time to stimulate Please hold on !</p>\n<p class="is-invalid">Note : Using Long recursion may take so long</p>');var e,n={python3:["web_exec_py3.py"],ruby:["web_exec_ruby.py","exec_ruby_jsonp"],javascript:["web_exec_js.py","exec_js_jsonp"]},t=encodeURIComponent(T.getValue());if((e=t).includes("input(")||e.includes("cin >>")||e.includes("scanf(")||e.includes("Scanner(")||e.includes("raw_input(")||e.includes("input(")||e.includes("gets")||e.includes("readline("))u()("#inputDetected").modal("show"),document.getElementById("debuggerModalClose").click();else{var i=u()("#languageSelect").val();if(n[i])if(u()("#debuggerModal").modal("show"),"python3"===i){i=u()("#languageSelect").val();var o=encodeURIComponent(T.getValue()),a="";u.a.ajax({xhr:function(){var e=new window.XMLHttpRequest;return e.upload.addEventListener("progress",(function(e){if(e.lengthComputable){var n=e.loaded/e.total;u()(".progress-bar").css("width","".concat(100*n,"%")).attr("aria-valuenow",100*n)}}),!1),e.addEventListener("progress",(function(e){if(e.lengthComputable){var n=e.loaded/e.total;u()(".progress-bar").css("width","".concat(100*n,"%")).attr("aria-valuenow",100*n)}}),!1),e},type:"GET",url:"https://debugger.guvi.in/".concat(n[i][0],"?\nuser_script=").concat(o,'\n&raw_input_json=&options_json={"cumulative_mode":true,"heap_primitives":true,"show_only_outputs":false,"origin":"opt-frontend.js"}\n&user_uuid=&session_uuid=&diffs_json='),timeout:0,success:function(e){a=JSON.parse(e),addVisualizerToPage(a,"debuggerDiv",{startingInstruction:2,hideCode:!1}),redrawAllVisualizerArrows()}})}else{i=u()("#languageSelect").val();var r=encodeURIComponent(T.getValue());u.a.ajax({xhr:function(){var e=new window.XMLHttpRequest;return e.upload.addEventListener("progress",(function(e){if(e.lengthComputable){var n=e.loaded/e.total;u()(".progress-bar").css("width","".concat(100*n,"%")).attr("aria-valuenow",100*n)}}),!1),e.addEventListener("progress",(function(e){if(e.lengthComputable){var n=e.loaded/e.total;u()(".progress-bar").css("width","".concat(100*n,"%")).attr("aria-valuenow",100*n)}}),!1),e},type:"GET",url:"https://debugger.guvi.in/web_exec.py?\nuser_script=".concat(r,'\n&raw_input_json=&options_json={"cumulative_mode":true,"heap_primitives":true,"show_only_outputs":false,"origin":"opt-frontend.js"}\n&user_uuid=&session_uuid=&diffs_json=&type=').concat(n[i][1]),timeout:0,success:function(e){var n=JSON.parse(e);addVisualizerToPage(n,"debuggerDiv",{startingInstruction:2,hideCode:!1}),redrawAllVisualizerArrows()}})}else u()("#unsupported").modal("show"),document.getElementById("debuggerModalClose").click()}})),u()(document).on("click","#runExplainer",(function(){var e=T.getValue(),n=Object(I.o)("authToken");if(""===e)u()("#inputGenValue").css("border","1px solid red");else{u()("#inputGenValue").css("border","1px solid #ced4da");var t={async:!0,crossDomain:!0,url:"https://ai-api.guvi.in/getCodeExplainationIde",method:"POST",headers:{"Content-Type":"application/json"},processData:!1,data:'{\n\t"auth":"'.concat(n,'",\n\t"reqText":"').concat(btoa(e),'"\n}')};u()(".spinner").show(),u.a.ajax(t).done((function(e){u()(".spinner").hide(),"success"===e.status?(u()("#explainationModal").modal("show"),u()("#explainationDivText").val(e.reply)):u()("#aiModal").modal({show:!0,backdrop:"static"})})).fail((function(e,n,t){u()(".spinner").hide()}))}})),u()(document).on("change","#langSelectorReg",(function(){var e=u()(this).val();!function(e,n,t){var i="",o="https://translate.googleapis.com/translate_a/single?client=gtx&sl=".concat(t,"&tl=").concat(n,"&dt=t&q=").concat(e);u.a.ajax({url:o,type:"GET",success:function(e){var n=e[0];n.forEach((function(e){n=(n=e[0]).replace(/[0-9]\.[ ]/g,""),i+="".concat(n,"\n")})),u()("#explainationDivText").val(i)}}).done((function(e){j=n}))}(u()("#explainationDivText").val(),e,j)})),u()(document).on("click","#genCode",(function(){R()})),u()(document).on("click","#genCode-sm",(function(){R()})),u()(document).on("click","#languageSelect",(function(){Object(I.x)("IDE_Language_Clicked")})),u()(document).on("click","#editor-settings",(function(){Object(I.x)("IDE_Settings_Clicked")})),u()(document).on("click","#runCode",(function(){Object(I.x)("IDE_Submit_Clicked");var e=new P,n=T.getValue(),t=x()?u()("#inputValue-sm").val():u()("#inputValue").val(),i=u()("#languageSelect option:selected").text();n&&""!==n&&(u()(".spinner").show(),u()("#runCode").attr("disabled",!0),Object(v.load)("6LdADb4UAAAAAA1feb36sozffPYRKKOqD9WPbibp").then((function(o){o.execute("runCode").then((function(o){Object(I.A)({type:"runCode",source:n,user_input:t,compilerId:e.getCompilerId(i),token:o},"ideNew.php").then((function(n){u()("#runCode").attr("disabled",!1);var t=JSON.parse(n);"success"===t.status?e.renderCustomCompilation(t):u()("#reloadModal").modal({show:!0,backdrop:"static"})})),y.track("send",{hitType:"event",eventCategory:"IDE",eventAction:"runCode",eventLabel:"".concat(i," - Run")})}))}))),k()})),u()(document).on("focus","#editor",(function(){N||G()})),u()(document).on("click",".input-tab",(function(){N&&G(),u()(".input").addClass("active show"),u()(".output").removeClass("active show"),u()(".generator").removeClass("active show")})),u()(document).on("click",".output-tab",(function(){N&&G(),u()(".output").addClass("active show"),u()(".input").removeClass("active show"),u()(".generator").removeClass("active show")})),u()(document).on("click",".gen-tab",(function(){N&&G(),u()(".generator").addClass("active show"),u()(".output").removeClass("active show"),u()(".input").removeClass("active show")})),u()(document).on("click","#initiateDelete",(function(){var e=new URLSearchParams(window.location.search).get("id");e&&"null"!==e&&"undefined"!==e||Object(I.o)("uniqueId")&&"null"!==Object(I.o)("uniqueId")&&"undefined"!==Object(I.o)("uniqueId")?u()("#deleteModal").modal({show:!0}):u()("#deleteUnsupportedModal").modal({show:!0})})),u()(document).on("click","#confirmDelete",(function(){u()("#deleteModal").modal({show:!1});var e={userName:Object(I.o)("unique_url"),uniqueId:Object(I.o)("uniqueId"),type:"deleteCode"};Object(I.A)(e,"ideNew.php").then((function(e){var n=JSON.parse(e);"success"===n.status?H():"failure"===n.status&&"unauthorized"===n.message&&u()("#deleteUnauthorizedModal").modal({show:!0})}))})),u()(document).on("click","#folder",(function(){Object(I.x)("IDE_Folder_Clicked");var e=Object(I.o)("authToken");e&&""!==e?(u()(".spinner").show(),Object(I.A)({type:"retrieveAllFiles",userName:Object(I.o)("unique_url")},"ideNew.php").then((function(e){var n=JSON.parse(e);u()("#files-list").empty();var t="",i=window.location.href.split("?"),o=new URLSearchParams(window.location.search).get("id")||Object(I.o)("uniqueId");if(0!==n.data.length)for(var a=0;a<n.data.length;a+=1)o===n.data[a].unique_id?t+=' <a href="'.concat(i[0],"?id=").concat(n.data[a].unique_id,'" class="list-group-item list-group-item-action active">    <div class="d-flex w-100 justify-content-between">\n            <h6 class="mb-1">').concat(n.data[a].file_name,'</h6>\n            <small  class="badge badge-primary badge-pill">').concat(n.data[a].language,"</small>\n          </div><small>Latest Update: ").concat(n.data[a].latest_update,"</small></a>"):t+=' <a href="'.concat(i[0],"?id=").concat(n.data[a].unique_id,'" class="list-group-item list-group-item-action">    <div class="d-flex w-100 justify-content-between">\n            <h6 class="mb-1">').concat(n.data[a].file_name,'</h6>\n            <small  class="badge badge-primary badge-pill">').concat(n.data[a].language,"</small>\n          </div><small>Latest Update: ").concat(n.data[a].latest_update,"</small></a>");else t+="<div>There are no codes saved to your account</div>";u()("#files-list").append(t),u()("#savedCodes").modal({show:!0,backdrop:"static"}),u()(".spinner").hide()}))):u()("#savedCodesHelpModal").modal({backdrop:"static",show:!0})})),u()(document).on("click","#new-file",(function(){H()})),u()(document).on("keyup","#fileName",(function(){var e=u()("#fileName").text();"python3"===u()("#languageSelect option:selected").text()&&(e+=".py"),Object(I.F)("fileName",e),_(!1)})),u()(document).on("input","#languageSelect, #editor-font-size, #themeControl, #autoCompletion, #showGutter, #codeWrap, #lineNumber",(function(){var e=new P;e.updateSettings(),"languageSelect"===u()(this)[0].id&&("true"===Object(I.o)("ideInteracted")?u()("#switchTemplatePrompt").modal({backdrop:"static",keyboard:!1}):e.insertTemplate(),_(!1))})),u()(document).on("click","#keepChanges",(function(){u()("#switchTemplatePrompt").modal("hide")})),u()(document).on("click","#insertTemplate, #dontKeepChanges",(function(){(new P).insertTemplate()})),u()(document).on("click",".share-link",(function(){k(),u()("#editorShareModal").modal("show")})),u()(document).on("click",".copy-link",(function(){navigator.clipboard.writeText(window.location.href)})),u()(document).on("click","#reloadPage",(function(){window.location.reload()})),u()('[data-toggle="tooltip"]').on("click",(function(){u()('[data-toggle="tooltip"]').addClass("hide")})),window.addEventListener("beforeunload",(function(e){if(u()("#cloud-sync").hasClass("bi-cloud-slash-fill")){var n="It looks like you have been editing something. If you leave before saving, your changes will be lost.";return(e||window.event).returnValue=n,n}})),u()((function(){Object(I.y)("#ide-page"),Object(I.u)(),Object(w.b)(),Object(w.a)(),Object(I.H)(),function(){function e(e){var n={userName:Object(I.o)("unique_url"),uniqueId:e,type:"retrieveCode"};Object(I.A)(n,"ideNew.php").then((function(e){var n=JSON.parse(e);if("success"===n.status){Object(I.F)("ideSourceCode",n.data.code),u()("#deleteFileName").html(n.data.file_name),Object(I.F)("ideLanguageSelected",n.data.language),Object(I.F)("uniqueId",n.data.unique_id);var t=Object(I.o)("ideLanguageSelected"),i=Object(I.o)("ideSourceCode");t&&""!==t&&u()("#languageSelect").val(t),i&&""!==i&&T.setValue(i),u()('#languageSelect option[value="'.concat(n.data.ideLanguageSelected,'"]')).prop("selected",!0),u()("#fileName").text(n.data.file_name),Object(I.F)("fileName",u()("#fileName").text()),_(!0)}}))}var n=new URLSearchParams(window.location.search).get("id");if(n&&"null"!==n&&"undefined"!==n)Object(I.F)("uniqueId",n),e(n);else if(Object(I.o)("uniqueId")&&"null"!==Object(I.o)("uniqueId")&&"undefined"!==Object(I.o)("uniqueId")){var t=window.location.href.split("?"),i="".concat(t[0],"?id=").concat(Object(I.o)("uniqueId"));window.history.pushState({path:i},"",i),e(Object(I.o)("uniqueId"))}}(),Object(I.o)("fileName")?u()("#fileName").text(Object(I.o)("fileName")):u()("#fileName").text("Untitled"),Object(I.C)(),y.page(),T=p.a.edit("editor"),u()('[data-toggle="tooltip"]').tooltip();var e=Object(I.o)("authToken");Object(I.A)({type:"checkZenStudent",mail:Object(I.o)("mail")},"ideNew.php").then((function(e){"success"!==JSON.parse(e).status&&"true"!==Object(I.o)("isZenUser")||(u()(".zen-none").removeClass("d-none"),x()&&(u()("#ide-footer-md").remove(),u()("#ide-footer-sm").removeClass("d-none"),u()("#editor").css("height","67vh")))})),e&&""!==e?e&&(u()(".explainLight").removeClass("explainLighthide"),u()(".codeGenerator").removeClass("hide")):(u()(".explainLight").addClass("explainLighthide"),u()(".codeGenerator").addClass("hide"));var n=new P,t=Object(I.o)("ideLanguageSelected"),i=Object(I.o)("ideSourceCode");if(n.renderComplierLanguages(!(!t||""===t)&&t),n.updateSettings(),u()(".spinner").hide(),t&&""!==t&&u()("#languageSelect").val(t),i&&""!==i)T.setValue(i);else{var o=u()("#languageSelect option:selected").text();T.setValue(n.codeTemplate(o))}T.on("change",(function(e){Object(I.F)("ideSourceCode",T.getValue()),Object(I.F)("ideInteracted",!0),Object(I.F)("fileName",u()("#fileName").text()),_(!1)})),"true"!==Object(I.o)("Dobbyhelp")&&(x()||u()("#idePopUp").on("hidden.bs.modal",(function(){Object(I.F)("Dobbyhelp","true")}))),u()("body").append('<script defer type="text/javascript" src="https://guvi-api.codingpuppet.com/guvi2.0/js/library/visualizer/build/embed.bundle.js" charset="utf-8"><\/script>'),A.isActivated()&&(L(),u()("#DarkModeToggle").prop("checked",!0)),Object(I.o)("ideShow")||Object(I.o)("uniqueId")||(Object(I.F)("ideShow",!0),u()("#idePopUp").modal("show"))}))},50:function(e,n,t){"use strict";t.d(n,"b",(function(){return c})),t.d(n,"a",(function(){return s}));var i=t(0),o=t.n(i),a=(t(78),t.p+"web-build/images/sand-clock.bbf5099c84a7992f9e84168e8b004a6d.png"),r=t.p+"web-build/images/stopwatch.cc6bda828b7a8a1bb19387d17e204dbb.png",l=t(1),s=function(){if("false"!==Object(l.o)("resubscribeModalShow")){var e='\n  <div class="modal" id="subEndModal" tabindex="-1" role="dialog" aria-labelledby="subEndModal" aria-hidden="true">\n  <div class="modal-dialog modal-size modal-dialog-centered mx-auto" role="document">\n    <div class="modal-content">\n      <div class="modal-body body-of-modal">\n        <h5 class="modal-heading">Your <span id="planName-modal"></span> PRO Subscription has Ended!</h5>\n        <img src="'.concat(a,'" class="modal-img" alt="sand-clock">\n        <p class="text-in-modal">Re-Subscribe now to continue your learning journey! </p>\n        <a href="/subscription/" class="btn btn-primary sub-pro-btn">Subscribe to PRO</a>\n        <button class="btn no-thanks-btn">No, Thanks</button>\n      </div>\n    </div>\n  </div>\n  </div>');if(o()("body").append(e),"false"===Object(l.o)("subscribed")&&"true"===Object(l.o)("expiredSubscription")){var n="";"anniversarySubscriptionMonthly"===Object(l.o)("expiredSubscriptionPlan")?n="Monthly":"anniversarySubscriptionYearly"===Object(l.o)("expiredSubscriptionPlan")&&(n="Yearly"),o()("#planName-modal").html(n),Object(l.F)("resubscribeModalShow","false"),o()(document).on("click",".no-thanks-btn",(function(){o()("#subEndModal").modal("hide")}))}}},c=function(){var e=parseInt(Object(l.o)("daysLeft"),10),n="";"anniversarySubscriptionMonthly"===Object(l.o)("subscriptionPlan")?n="Monthly":"anniversarySubscriptionYearly"===Object(l.o)("subscriptionPlan")&&(n="Yearly"),"true"===Object(l.o)("subscribed")&&e<4&&e>0&&(o()("#sidebar").css("top","74px"),o()(window).on("scroll",(function(){o()(document).scrollTop()>75?o()("#sidebar").css("top","0"):o()("#sidebar").css("top","74px")})),o()("body").prepend('<div class="d-flex align-items-center justify-content-center notification-body">\n        <div><img src="'.concat(r,'" class="stop-watch-img" alt="stop"></div>\n        <div class="d-lg-flex align-items-center justify-content-center"><h3 class="notification-head">Your ').concat(n,' PRO Subscription â€Ž </h3><div class="d-flex align-items-center justify-content-center"><h3 class="notification-head">plan ends in <span class="days-left"> ').concat(e," days !!!</span> </h3></div></div>\n    </div>")))}},78:function(e,n,t){},931:function(e,n,t){t(1028),e.exports=t(934)},934:function(e,n,t){}});